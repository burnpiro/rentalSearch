(function () {
    angular.module('RentalSearchApp', [
        'ui.router', 'ngMaterial', 'ngMdIcons', 'rental-services'
    ])
})();
(function () {
    angular.module('RentalSearchApp')
        .config(function ($stateProvider, $urlRouterProvider, $mdThemingProvider) {
            $urlRouterProvider.otherwise('/');
            $stateProvider
                .state('home', {
                    name: 'dashboard',
                    url: '/',
                    controller: 'DashboardController',
                    templateUrl: 'views/dashboard/dashboardView.html'
                })
                .state('settings', {
                    name: 'settings',
                    url: '/settings',
                    controller: 'SettingsController',
                    templateUrl: 'views/settings/settingsView.html'
                });
            $mdThemingProvider.theme('altTheme')
                .primaryPalette('green')
                .accentPalette('light-blue');
            $mdThemingProvider.setDefaultTheme('altTheme');
        });
})();
(function () {
    angular.module('RentalSearchApp')

        .controller('DashboardController', ['$scope', '$rootScope',
            function($scope, $rootScope) {
                var self = this;
                self.list = {
                    higher: 0
                };
                self.seen = {
                    olx: false,
                    gumtree: false
                };
                self.items = [];
                $rootScope.selectedTab = 0;
                self.selection = 'default';

                chrome.runtime.sendMessage({get: 'list'}, function(response) {
                    self.items = response;
                    // needs to be called because after response is received view is already rendered and have empty array
                    $scope.$apply();
                });

                self.changeSeen = function(hashId, type) {
                    chrome.runtime.sendMessage({seen: hashId, set:'seen', type: type}, function() {
                        //no response needed
                    });
                };

                self.markAllAsSeen = function(type) {
                    chrome.runtime.sendMessage({set:'allSeen', type: type}, function() {
                        //no response needed
                    });
                    _.forEach(self.items, function(item) {
                        if(item.type === type) {
                            item.seen = true;
                        }
                    })
                };

                self.openLink = function(item) {
                    self.changeSeen(item.hashId, item.type);
                    window.open(item.link,'_blank');
                }
            }
        ]);
})();
(function () {
    angular.module('RentalSearchApp')

        .controller('SettingsController', ['$scope', 'LinkService',
            function($scope, LinkService) {
                var self = this;
                self.sizeTypes = [
                    {
                        value: null,
                        name: 'All'
                    },
                    {
                        value: 'one',
                        name: 'Kawalerka / 1 room'
                    },
                    {
                        value: 'two',
                        name: '2 rooms'
                    },
                    {
                        value: 'three',
                        name: '3 rooms'
                    },
                    {
                        value: 'four',
                        name: '4+ rooms '
                    }
                ];
                self.categories = [
                    {
                        value: 'mieszkania/wynajem',
                        name: 'Mieszkania wynajem'
                    },
                    {
                        value: 'stancje-pokoje',
                        name: 'Pokoje/Stancje'
                    },
                    {
                        value: 'mieszkania/sprzedaz',
                        name: 'Mieszkania sprzedaz'
                    },
                    {
                        value: 'dzialki',
                        name: 'Działki'
                    },
                    {
                        value: 'biura-lokale',
                        name: 'Lokale i biura'
                    },
                    {
                        value: 'garaze-parkingi',
                        name: 'Parkingi i garaże'
                    }
                ]

                self.settings = {
                    interval: 1,
                    olxLink: 'http://olx.pl/nieruchomosci/mieszkania/wynajem/',
                    gumtreeLink: 'http://www.gumtree.pl/s-mieszkania-i-domy-do-wynajecia/v1c9008p1',
                    advanced: false,
                    automaticallyMarkAsSeen: false,
                    sizeType: null,
                    location: {},
                    locationDisplay: '',
                    category: 'mieszkania/wynajem'
                };
                self.items = [];

                chrome.runtime.sendMessage({get: 'settings'}, function(response) {
                    self.settings = response;
                    if(angular.isDefined(self.settings.location)) {
                        self.settings.locationDisplay = self.settings.location.display;
                    }
                    if(response.advanced) {
                        self.settings.gumtreeLink = response.gumtreeLink;
                    }
                    if(!self.settings.category) {
                        self.settings.category = 'mieszkania/wynajem';
                    }

                    // needs to be called because after response is received view is already rendered and have empty array
                    $scope.$apply();
                });

                self.saveSettings = function() {
                    var requestData = _.clone(self.settings);
                    if(self.settings.advanced) {
                        requestData.gumtreeLink = self.settings.gumtreeLink;
                    }
                    chrome.runtime.sendMessage({settings: requestData, set:'settings'}, function() {
                    });
                };

                self.querySearch = function(query) {
                    return query ? LinkService.searchLocationByName(query) : [];
                };

            }
        ]);
})();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5tb2R1bGUuanMiLCJhcHAucm91dGUuanMiLCJkYXNoYm9hcmQvZGFzaGJvYXJkQ29udHJvbGxlci5qcyIsInNldHRpbmdzL3NldHRpbmdzQ29udHJvbGxlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDSkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ3RCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDOUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImFwcC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKCkge1xuICAgIGFuZ3VsYXIubW9kdWxlKCdSZW50YWxTZWFyY2hBcHAnLCBbXG4gICAgICAgICd1aS5yb3V0ZXInLCAnbmdNYXRlcmlhbCcsICduZ01kSWNvbnMnLCAncmVudGFsLXNlcnZpY2VzJ1xuICAgIF0pXG59KSgpOyIsIihmdW5jdGlvbiAoKSB7XG4gICAgYW5ndWxhci5tb2R1bGUoJ1JlbnRhbFNlYXJjaEFwcCcpXG4gICAgICAgIC5jb25maWcoZnVuY3Rpb24gKCRzdGF0ZVByb3ZpZGVyLCAkdXJsUm91dGVyUHJvdmlkZXIsICRtZFRoZW1pbmdQcm92aWRlcikge1xuICAgICAgICAgICAgJHVybFJvdXRlclByb3ZpZGVyLm90aGVyd2lzZSgnLycpO1xuICAgICAgICAgICAgJHN0YXRlUHJvdmlkZXJcbiAgICAgICAgICAgICAgICAuc3RhdGUoJ2hvbWUnLCB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdkYXNoYm9hcmQnLFxuICAgICAgICAgICAgICAgICAgICB1cmw6ICcvJyxcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ0Rhc2hib2FyZENvbnRyb2xsZXInLFxuICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL2Rhc2hib2FyZC9kYXNoYm9hcmRWaWV3Lmh0bWwnXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAuc3RhdGUoJ3NldHRpbmdzJywge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnc2V0dGluZ3MnLFxuICAgICAgICAgICAgICAgICAgICB1cmw6ICcvc2V0dGluZ3MnLFxuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAnU2V0dGluZ3NDb250cm9sbGVyJyxcbiAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9zZXR0aW5ncy9zZXR0aW5nc1ZpZXcuaHRtbCdcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICRtZFRoZW1pbmdQcm92aWRlci50aGVtZSgnYWx0VGhlbWUnKVxuICAgICAgICAgICAgICAgIC5wcmltYXJ5UGFsZXR0ZSgnZ3JlZW4nKVxuICAgICAgICAgICAgICAgIC5hY2NlbnRQYWxldHRlKCdsaWdodC1ibHVlJyk7XG4gICAgICAgICAgICAkbWRUaGVtaW5nUHJvdmlkZXIuc2V0RGVmYXVsdFRoZW1lKCdhbHRUaGVtZScpO1xuICAgICAgICB9KTtcbn0pKCk7IiwiKGZ1bmN0aW9uICgpIHtcbiAgICBhbmd1bGFyLm1vZHVsZSgnUmVudGFsU2VhcmNoQXBwJylcblxuICAgICAgICAuY29udHJvbGxlcignRGFzaGJvYXJkQ29udHJvbGxlcicsIFsnJHNjb3BlJywgJyRyb290U2NvcGUnLFxuICAgICAgICAgICAgZnVuY3Rpb24oJHNjb3BlLCAkcm9vdFNjb3BlKSB7XG4gICAgICAgICAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICAgICAgICAgIHNlbGYubGlzdCA9IHtcbiAgICAgICAgICAgICAgICAgICAgaGlnaGVyOiAwXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBzZWxmLnNlZW4gPSB7XG4gICAgICAgICAgICAgICAgICAgIG9seDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGd1bXRyZWU6IGZhbHNlXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBzZWxmLml0ZW1zID0gW107XG4gICAgICAgICAgICAgICAgJHJvb3RTY29wZS5zZWxlY3RlZFRhYiA9IDA7XG4gICAgICAgICAgICAgICAgc2VsZi5zZWxlY3Rpb24gPSAnZGVmYXVsdCc7XG5cbiAgICAgICAgICAgICAgICBjaHJvbWUucnVudGltZS5zZW5kTWVzc2FnZSh7Z2V0OiAnbGlzdCd9LCBmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgICAgICBzZWxmLml0ZW1zID0gcmVzcG9uc2U7XG4gICAgICAgICAgICAgICAgICAgIC8vIG5lZWRzIHRvIGJlIGNhbGxlZCBiZWNhdXNlIGFmdGVyIHJlc3BvbnNlIGlzIHJlY2VpdmVkIHZpZXcgaXMgYWxyZWFkeSByZW5kZXJlZCBhbmQgaGF2ZSBlbXB0eSBhcnJheVxuICAgICAgICAgICAgICAgICAgICAkc2NvcGUuJGFwcGx5KCk7XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICBzZWxmLmNoYW5nZVNlZW4gPSBmdW5jdGlvbihoYXNoSWQsIHR5cGUpIHtcbiAgICAgICAgICAgICAgICAgICAgY2hyb21lLnJ1bnRpbWUuc2VuZE1lc3NhZ2Uoe3NlZW46IGhhc2hJZCwgc2V0OidzZWVuJywgdHlwZTogdHlwZX0sIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy9ubyByZXNwb25zZSBuZWVkZWRcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgICAgIHNlbGYubWFya0FsbEFzU2VlbiA9IGZ1bmN0aW9uKHR5cGUpIHtcbiAgICAgICAgICAgICAgICAgICAgY2hyb21lLnJ1bnRpbWUuc2VuZE1lc3NhZ2Uoe3NldDonYWxsU2VlbicsIHR5cGU6IHR5cGV9LCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vbm8gcmVzcG9uc2UgbmVlZGVkXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBfLmZvckVhY2goc2VsZi5pdGVtcywgZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYoaXRlbS50eXBlID09PSB0eXBlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5zZWVuID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgc2VsZi5vcGVuTGluayA9IGZ1bmN0aW9uKGl0ZW0pIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5jaGFuZ2VTZWVuKGl0ZW0uaGFzaElkLCBpdGVtLnR5cGUpO1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cub3BlbihpdGVtLmxpbmssJ19ibGFuaycpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgXSk7XG59KSgpOyIsIihmdW5jdGlvbiAoKSB7XG4gICAgYW5ndWxhci5tb2R1bGUoJ1JlbnRhbFNlYXJjaEFwcCcpXG5cbiAgICAgICAgLmNvbnRyb2xsZXIoJ1NldHRpbmdzQ29udHJvbGxlcicsIFsnJHNjb3BlJywgJ0xpbmtTZXJ2aWNlJyxcbiAgICAgICAgICAgIGZ1bmN0aW9uKCRzY29wZSwgTGlua1NlcnZpY2UpIHtcbiAgICAgICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgICAgICAgICAgc2VsZi5zaXplVHlwZXMgPSBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ0FsbCdcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICdvbmUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ0thd2FsZXJrYSAvIDEgcm9vbSdcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICd0d28nLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJzIgcm9vbXMnXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiAndGhyZWUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJzMgcm9vbXMnXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnZm91cicsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnNCsgcm9vbXMgJ1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXTtcbiAgICAgICAgICAgICAgICBzZWxmLmNhdGVnb3JpZXMgPSBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnbWllc3prYW5pYS93eW5hamVtJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdNaWVzemthbmlhIHd5bmFqZW0nXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnc3RhbmNqZS1wb2tvamUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ1Bva29qZS9TdGFuY2plJ1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJ21pZXN6a2FuaWEvc3ByemVkYXonLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ01pZXN6a2FuaWEgc3ByemVkYXonXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnZHppYWxraScsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnRHppYcWCa2knXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnYml1cmEtbG9rYWxlJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdMb2thbGUgaSBiaXVyYSdcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICdnYXJhemUtcGFya2luZ2knLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ1BhcmtpbmdpIGkgZ2FyYcW8ZSdcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIF1cblxuICAgICAgICAgICAgICAgIHNlbGYuc2V0dGluZ3MgPSB7XG4gICAgICAgICAgICAgICAgICAgIGludGVydmFsOiAxLFxuICAgICAgICAgICAgICAgICAgICBvbHhMaW5rOiAnaHR0cDovL29seC5wbC9uaWVydWNob21vc2NpL21pZXN6a2FuaWEvd3luYWplbS8nLFxuICAgICAgICAgICAgICAgICAgICBndW10cmVlTGluazogJ2h0dHA6Ly93d3cuZ3VtdHJlZS5wbC9zLW1pZXN6a2FuaWEtaS1kb215LWRvLXd5bmFqZWNpYS92MWM5MDA4cDEnLFxuICAgICAgICAgICAgICAgICAgICBhZHZhbmNlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGF1dG9tYXRpY2FsbHlNYXJrQXNTZWVuOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgc2l6ZVR5cGU6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIGxvY2F0aW9uOiB7fSxcbiAgICAgICAgICAgICAgICAgICAgbG9jYXRpb25EaXNwbGF5OiAnJyxcbiAgICAgICAgICAgICAgICAgICAgY2F0ZWdvcnk6ICdtaWVzemthbmlhL3d5bmFqZW0nXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBzZWxmLml0ZW1zID0gW107XG5cbiAgICAgICAgICAgICAgICBjaHJvbWUucnVudGltZS5zZW5kTWVzc2FnZSh7Z2V0OiAnc2V0dGluZ3MnfSwgZnVuY3Rpb24ocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5zZXR0aW5ncyA9IHJlc3BvbnNlO1xuICAgICAgICAgICAgICAgICAgICBpZihhbmd1bGFyLmlzRGVmaW5lZChzZWxmLnNldHRpbmdzLmxvY2F0aW9uKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5zZXR0aW5ncy5sb2NhdGlvbkRpc3BsYXkgPSBzZWxmLnNldHRpbmdzLmxvY2F0aW9uLmRpc3BsYXk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYocmVzcG9uc2UuYWR2YW5jZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuc2V0dGluZ3MuZ3VtdHJlZUxpbmsgPSByZXNwb25zZS5ndW10cmVlTGluaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZighc2VsZi5zZXR0aW5ncy5jYXRlZ29yeSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5zZXR0aW5ncy5jYXRlZ29yeSA9ICdtaWVzemthbmlhL3d5bmFqZW0nO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgLy8gbmVlZHMgdG8gYmUgY2FsbGVkIGJlY2F1c2UgYWZ0ZXIgcmVzcG9uc2UgaXMgcmVjZWl2ZWQgdmlldyBpcyBhbHJlYWR5IHJlbmRlcmVkIGFuZCBoYXZlIGVtcHR5IGFycmF5XG4gICAgICAgICAgICAgICAgICAgICRzY29wZS4kYXBwbHkoKTtcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIHNlbGYuc2F2ZVNldHRpbmdzID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciByZXF1ZXN0RGF0YSA9IF8uY2xvbmUoc2VsZi5zZXR0aW5ncyk7XG4gICAgICAgICAgICAgICAgICAgIGlmKHNlbGYuc2V0dGluZ3MuYWR2YW5jZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVlc3REYXRhLmd1bXRyZWVMaW5rID0gc2VsZi5zZXR0aW5ncy5ndW10cmVlTGluaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjaHJvbWUucnVudGltZS5zZW5kTWVzc2FnZSh7c2V0dGluZ3M6IHJlcXVlc3REYXRhLCBzZXQ6J3NldHRpbmdzJ30sIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgc2VsZi5xdWVyeVNlYXJjaCA9IGZ1bmN0aW9uKHF1ZXJ5KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBxdWVyeSA/IExpbmtTZXJ2aWNlLnNlYXJjaExvY2F0aW9uQnlOYW1lKHF1ZXJ5KSA6IFtdO1xuICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIH1cbiAgICAgICAgXSk7XG59KSgpOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==